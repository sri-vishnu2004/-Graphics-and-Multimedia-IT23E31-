import matplotlib.pyplot as plt

def mark(x, y):
    plt.plot(x, y, 'ro')

def draw_line(x1, y1, x2, y2):
    dx, dy = abs(x2 - x1), abs(y2 - y1)
    x, y = x1, y1
    step_x = 1 if x2 > x1 else -1
    step_y = 1 if y2 > y1 else -1

    if dx > dy:
        err = dx // 2
        while x != x2:
            mark(x, y)
            err -= dy
            if err < 0:
                y += step_y
                err += dx
            x += step_x
    else:
        err = dy // 2
        while y != y2:
            mark(x, y)
            err -= dx
            if err < 0:
                x += step_x
                err += dy
            y += step_y
    mark(x, y)

def draw_circle(h, k, r):
    x, y = 0, r
    p = 1 - r
    while x <= y:
        for a, b in [(x, y), (y, x), (-x, y), (-y, x),
                     (-x, -y), (-y, -x), (x, -y), (y, -x)]:
            mark(h + a, k + b)
        x += 1
        if p < 0:
            p += 2 * x + 1
        else:
            y -= 1
            p += 2 * (x - y) + 1

def draw_ellipse(rx, ry, cx, cy):
    x, y = 0, ry
    rx2, ry2 = rx*2, ry*2
    d1 = ry2 - (rx2 * ry) + (0.25 * rx2)
    dx, dy = 2 * ry2 * x, 2 * rx2 * y

    while dx < dy:
        for a, b in [(x, y), (-x, y), (x, -y), (-x, -y)]:
            mark(cx + a, cy + b)
        x += 1
        dx = 2 * ry2 * x
        if d1 < 0:
            d1 += dx + ry2
        else:
            y -= 1
            dy = 2 * rx2 * y
            d1 += dx - dy + ry2

    d2 = (ry2 * (x + 0.5)*2) + (rx2 * (y - 1)*2) - (rx2 * ry2)
    while y >= 0:
        for a, b in [(x, y), (-x, y), (x, -y), (-x, -y)]:
            mark(cx + a, cy + b)
        y -= 1
        dy = 2 * rx2 * y
        if d2 > 0:
            d2 -= dy + rx2
        else:
            x += 1
            dx = 2 * ry2 * x
            d2 += dx - dy + rx2

plt.figure(figsize=(8, 8))
draw_line(15, 15, 120, 70)
draw_circle(120, 120, 45)
draw_ellipse(70, 35, 210, 210)
plt.gca().set_aspect('equal', adjustable='box')
plt.grid(True)
plt.show()
